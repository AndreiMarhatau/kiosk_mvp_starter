    def load_home(self, force: bool = False):
        is_home_view = (self._current_route == 'home')
        if is_home_view:
            self._apply_home_background(True)
            self._handle_user_activity()

        cached = self._home_cache
        if cached:
            if is_home_view:
                self.home.build(cached['data'])
            if not force and time.time() - cached['ts'] <= HOME_CACHE_TTL:
                return
        elif is_home_view and not self._home_loading:
            self.home.build([])

        if self._home_loading:
            return
        self._home_loading = True

        def worker():
            try:
                resp = requests.get(f"{API}/home/menu", timeout=7)
                resp.raise_for_status()
                data = resp.json()
                error = None
            except Exception as exc:
                data = None
                error = exc

            def apply():
                self._home_loading = False
                if error is not None:
                    if cached is None and self._current_route == 'home':
                        self.home.build([])
                    return
                self._home_cache = {'data': data, 'ts': time.time()}
                if self._current_route == 'home':
                    self.home.build(data)

            QTimer.singleShot(0, apply)

        threading.Thread(target=worker, daemon=True).start()
